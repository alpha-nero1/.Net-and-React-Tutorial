{"version":3,"sources":["types/activity.ts","types/pagination.ts","types/profile.ts","types/server-error.ts","types/user.model.ts","app/api/agent.ts","app/stores/activityStore.tsx","types/comment.ts","app/stores/commonStore.ts","app/stores/profileStore.tsx","app/stores/userStore.ts","app/stores/store.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingCircle.tsx","app/common/form/TextArea.tsx","app/common/form/SelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailsHeader.tsx","features/activities/details/ActivityDetailsInfo.tsx","features/activities/details/ActivityDetailsChat.tsx","features/activities/details/ActivityDetailsSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/image-upload/PhotoWidgetCropper.tsx","app/common/image-upload/PhotoWidgetDropzone.tsx","app/common/image-upload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","opts","id","title","date","description","category","city","venue","hostUsername","isCancelled","isGoing","isHost","host","attendees","Object","assign","this","DateStringToDate","find","att","username","dateStr","dateRetStr","includes","split","Date","ActivityFormValues","activity","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","Profile","user","displayName","bio","image","photos","followersCount","followingCount","following","ServerError","statusCode","message","details","User","token","axios","defaults","baseURL","process","interceptors","request","use","config","store","commonStore","length","headers","Authorization","response","res","JSON","parse","err","status","toast","error","method","errors","hasOwnProperty","History","push","stateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","create","update","attend","Account","current","usr","login","register","Profiles","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","ActivityStore","activityRegister","Map","selectedActivity","isEditing","isLoading","isSubmitting","pagingParams","set","setPredicate","value","resetPred","forEach","val","loadActivities","setIsLoading","axiosParams","setPagination","setActivities","map","at","catch","loadActivity","setSelectedActivity","resolve","act","setIsEditing","editing","setIsSubmitting","submitting","loading","activities","userStore","some","a","createActivity","attendee","newActivity","updateActivity","activityForm","updatedAtt","deleteActivity","updateAttendance","runInAction","filter","item","cancelActivityToggle","clearSelectedActivity","undefined","updateAttendeeFollowing","setPagingParams","pars","makeAutoObservable","reaction","keys","clear","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","format","URLSearchParams","toString","toISOString","ChatComment","createdAt","TOKEN_STRING","ProfileStore","profile","isLoadingProfile","isUploading","isLoadingFollowings","followings","activeTab","userActivities","isLoadingActivities","setActiveTab","loadProfile","photo","isMain","setProfileImage","p","newFollowing","activityStore","loadFollowings","console","log","loadUserActivities","acts","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getMe","Boolean","getItem","appIsLoaded","setAppIsLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comm","comment","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","spaced","avatar","Dropdown","pointing","text","Link","icon","onClick","props","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","Description","extra","Icon","followStyle","borderColor","borderWidth","List","horizontal","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","isLoadingNext","setIsLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","actve","TextInput","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","validationSchema","Yup","required","dirty","isValid","isAuthenticated","LoadingCircle","Dimmer","TextArea","SelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","categoryOptions","DateInput","selected","history","useHistory","useParams","setActivity","yup","nullable","subheader","enableReinitialize","vals","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","ribbon","zIndex","top","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","divided","Extra","ActivityDetailsHeader","ActivityDetailsInfo","ActivityDetailsChat","ActivityDetailsSidebar","TestErrors","widths","baseUrl","primary","NotFound","Inline","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","setCropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","ProfileHeader","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.192fe142.chunk.js","sourcesContent":["import { Profile } from \"./profile\";\n\nexport class Activity {\n  id: string = '';\n  title: string = '';\n  date?: Date | null = null;\n  description: string = '';\n  category: string = '';\n  city: string = '';\n  venue: string = '';\n  hostUsername: string | null = null;\n  isCancelled?: boolean;\n  isGoing?: boolean;\n  isHost?: boolean;\n  host?: Profile;\n  attendees: Profile[] = []\n\n  constructor(opts?: Partial<Activity>) {\n    if (opts) {\n      Object.assign(this, opts);\n      if (opts.date) {\n        this.date = Activity.DateStringToDate(opts.date as any);\n      }\n      if (opts.attendees) {\n        this.host = opts.attendees.find(att => att.username === this.hostUsername);\n      }\n    }\n  }\n\n  public static DateStringToDate(dateStr: string) {\n    let dateRetStr = dateStr;\n    if (typeof dateStr === 'string' && dateStr.includes('T')) {\n      dateRetStr = dateStr.split('T')[0];\n    }\n    return new Date(dateRetStr);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date?: Date  | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      Object.assign(this, activity);\n    }\n  }\n}","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber: number;\n  pageSize: number;\n\n  constructor(pageNumber = 1, pageSize = 10) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}","import { User } from \"./user.model\";\n\nexport class Profile {\n  username: string;\n  displayName: string;\n  bio: string | null = null;\n  image?: string\n  photos: Photo[] = [];\n  followersCount?: number;\n  followingCount?: number;\n  following?: boolean;\n\n  constructor(user: User) {\n    this.username = user.username as string;\n    this.displayName = user.displayName as string;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}","export class ServerError {\n  statusCode?: number;\n  message?: string;\n  details?: string;\n\n  constructor(opts?: Partial<ServerError>) {\n    if (opts) {\n      Object.assign(this, opts);\n    }\n  }\n}","\nexport class User {\n  username?: string;\n  displayName?: string;\n  image?: string;\n  token?: string;\n\n  constructor(opts: Partial<User>) {\n    Object.assign(this, opts);\n  }\n}\n\nexport interface UserFormValues {\n  email: string;\n  password: string;\n  displayName?: string;\n  username?: string;\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { History } from '../..';\nimport { Activity, ActivityFormValues } from '../../types/activity';\nimport { PaginatedResult } from '../../types/pagination';\nimport { Photo, Profile } from '../../types/profile';\nimport { ServerError } from '../../types/server-error';\nimport { UserActivity } from '../../types/user-activity';\nimport { User, UserFormValues } from '../../types/user.model';\nimport { store } from '../stores/store';\n\n// I am against the implementation of this file, I would use a class.\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(\n  config => {\n    const token = store.commonStore.token;\n    // Easily add token to auth header if it is present (user is authenticated!).\n    if (token && token.length) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n  }\n)\n\naxios.interceptors.response.use(\n  res => {\n    const pagination = res.headers['pagination'];\n    if (pagination) {\n      res.data = new PaginatedResult(res.data, JSON.parse(pagination));\n      return res as AxiosResponse<PaginatedResult<any>>;\n    }\n    return res;\n  }, \n  (err: AxiosError) => {\n    if (err && err.response) {\n      const { data, status, config } = err.response;\n      switch (status) {\n        case 400:\n          if (typeof data === 'string') toast.error(data);\n          if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n            History.push('/not-found');\n          }\n          if (data.errors) {\n            const stateErrors = [];\n            for (const key in data.errors) {\n              if (data.errors[key]) stateErrors.push(data.errors[key])\n            }\n            throw stateErrors.flat();\n          }\n          break;\n        case 401:\n          toast.error('Unauthorised');\n          break;\n        case 404:\n          History.push('/not-found');\n          break;\n        case 500:\n          store.commonStore.setServerError(new ServerError(data));\n          History.push('/server-error');\n          break;\n      }\n    } else {\n      toast.error('Something went wromg, please try again.');\n    }\n    return Promise.reject(err);\n  }\n);\n\nconst responseBody = (res: AxiosResponse) => res.data;\n\n// Base requests object.\nconst requests = {\n  get: <T> (url: string) => axios.get<T>(url).then(responseBody),\n  post: <T> (url: string, body: any) => axios.post<T>(url, body).then(responseBody),\n  put: <T> (url: string, body: any) => axios.put<T>(url, body).then(responseBody),\n  del: <T> (url: string) => axios.delete<T>(url).then(responseBody),\n}\n\n// Account requests.\nconst Account = {\n  current: () => requests.get<User>('/account').then(usr => new User(usr)),\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user)\n}\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    // Upload the photo to our API which handles upload to 3rd party...\n    let formData = new FormData();\n    formData.append('File', file);\n    return axios.post<Photo>('photos', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string = '') => (\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n  )\n}\n\n// Activities requests.\nconst Activities = {\n  list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params }).then(responseBody) as Promise<PaginatedResult<Activity[]>>,\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`) as Promise<Activity>,\n  create: (activity: ActivityFormValues) => requests.post('/activities', activity),\n  update: (activity: ActivityFormValues) => requests.put(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles\n}\n\nexport default agent;","import { format } from \"date-fns\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\"\nimport { Activity, ActivityFormValues } from \"../../types/activity\";\nimport { Pagination, PagingParams } from \"../../types/pagination\";\nimport { Profile } from \"../../types/profile\";\nimport agent from \"../api/agent\";\nimport { store } from \"./store\";\n\nexport default class ActivityStore {\n\n  activityRegister = new Map<string, Activity>();\n\n  selectedActivity: Activity | undefined;\n\n  isEditing = false;\n\n  isLoading = false;\n\n  isSubmitting = false;\n\n  pagination: Pagination | null = null;\n\n  pagingParams = new PagingParams();\n\n  predicate = new Map().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(() => this.predicate.keys(), () => {\n      this.pagingParams = new PagingParams();\n      this.activityRegister.clear();\n      // Load next batch of activities.\n      this.loadActivities();\n    });\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegister.values())\n      .sort((a, b) => (\n        a.date!.getTime() - b.date!.getTime()\n      ));\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate\n      .reduce((activities, at) => {\n        const date = format(at.date!, 'dd MMM yyyy');\n        activities[date] = activities[date] || [];\n        activities[date].push(at)\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    )\n  }\n\n  get axiosParams() {\n    const pars = new URLSearchParams();\n    pars.append('pageNumber', this.pagingParams.pageNumber.toString());\n    pars.append('pageSize', this.pagingParams.pageSize.toString());\n    this.predicate.forEach((val, key) => {\n      if (key === 'startDate') {\n        pars.append(key, (val as Date).toISOString());\n      } else {\n        pars.append(key, val)\n      }\n    });\n    return pars;\n  }\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPred = () => {\n      this.predicate.forEach((val, key) => {\n        if (key !== 'startDate') {\n          this.predicate.delete(key);\n        }\n      })\n    }\n    switch (predicate) {\n      case 'all':\n        resetPred();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPred();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPred()\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n    }\n  }\n\n  loadActivities = () => {\n    this.setIsLoading(true);\n    return agent.Activities.list(this.axiosParams)\n    .then(({ data, pagination }) => {\n      if (pagination) this.setPagination(pagination);\n      if (data && data.length) this.setActivities(data.map(at => new Activity(at)));\n      this.setIsLoading(false);\n    })\n    .catch((err) => {\n      this.setIsLoading(false);\n      throw err;\n    })\n  }\n\n  loadActivity = (id: string) => {\n    let at = this.activityRegister.get(id);\n    if (at) {\n      this.setSelectedActivity(at);\n      return Promise.resolve(at);\n    } else {\n      this.setIsLoading(true);\n      return agent.Activities.details(id)\n      .then(act => {\n        act.date = Activity.DateStringToDate(act.date as any);\n        this.activityRegister.set(act.id, act);\n        this.setSelectedActivity(act);\n        this.setIsLoading(false);\n        return act;\n      })\n      .catch((err) => {\n        this.setIsLoading(false);\n        throw err;\n      })\n    }\n  }\n\n  setIsEditing = (editing: boolean) => {\n    this.isEditing = editing;\n  }\n\n  setIsSubmitting = (submitting: boolean) => {\n    this.isSubmitting = submitting;\n  }\n\n  setIsLoading = (loading: boolean) => {\n    this.isLoading = loading;\n  }\n\n  setActivities = (activities: Activity[]) => {\n    this.activityRegister = new Map<string, Activity>(\n      activities.map(at => [at.id, at])\n    );\n  }\n\n  setSelectedActivity = (at: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      at.isGoing = at.attendees.some(a => a.username === user.username);\n      at.isHost = at.hostUsername === user.username\n      at.host = at.attendees.find(a => a.username === at.hostUsername);\n      this.selectedActivity = at;\n    }\n  }\n\n  createActivity = (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    return agent.Activities.create(activity)\n    .then(() => {\n      const newActivity = new Activity({\n        ...activity\n      })\n      newActivity.hostUsername = user!.username as string;\n      newActivity.attendees = [attendee];\n      this.setSelectedActivity(newActivity);\n    })\n    .catch((err) => {\n      throw err;\n    });\n  }\n\n  updateActivity = (activityForm: ActivityFormValues) => {\n    return agent.Activities.update(activityForm)\n    .then(() => {\n      if (activityForm.id) {\n        let updatedAtt = {\n          ...this.selectedActivity,\n          ...activityForm\n        };\n        const att = new Activity(updatedAtt);\n        this.activityRegister.set(att.id as string, att);\n        this.setSelectedActivity(att);\n      }\n    })\n    .catch((err) => {\n      throw err;\n    })\n  }\n\n  deleteActivity = (id: string) => {\n    this.setIsSubmitting(true);\n    agent.Activities.delete(id)\n    .then(() => {\n      this.activityRegister.delete(id);\n      this.setIsSubmitting(false);\n    })\n    .catch((err) => {\n      this.setIsSubmitting(false);\n      throw err;\n    })\n  }\n\n  // Update the attendance for the current user.\n  // Leverages the ! a lot because contextually we should only bve able to do this\n  // if we have sel activity.\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.setIsSubmitting(true);\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        // Set attendance props.\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = \n            this.selectedActivity.attendees\n            .filter(item => item.username !== user?.username);\n          this.selectedActivity.isGoing = false;\n        } else {\n          // We are toggling the other way.\n          const att = new Profile(user!);\n          this.selectedActivity?.attendees.push(att);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegister.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (e) {\n      throw e;\n    } finally {\n      runInAction(() => this.setIsSubmitting(false));\n    }\n  }\n\n  cancelActivityToggle = async () => {\n    this.isSubmitting = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n        this.activityRegister.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (e) {\n      throw e;\n    } finally {\n      this.isSubmitting = false;\n    }\n  }\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n\n  // Do not like this function would not implement in real life!\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegister.forEach(att => {\n      att.attendees.forEach(attendee => {\n        if (attendee && attendee.username === username) {\n          attendee.following ? attendee.followersCount!-- : attendee.followersCount!++\n          attendee.following = !attendee.following;\n        }\n      })\n    })\n  }\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  }\n\n  setPagingParams = (pars: PagingParams) => {\n    this.pagingParams = pars;\n  }\n}","export interface ChatComment {\n  id: number;\n  createdAt: Date;\n  body: string;\n  username: string;\n  disaplayName: string;\n  image: string;\n}\n\nexport class ChatComment implements ChatComment {\n  constructor(opts?: Partial<ChatComment>) {\n    if (opts) {\n      Object.assign(this, opts);\n      if (opts.createdAt) {\n        this.createdAt = new Date(opts.createdAt);\n      }\n    }\n  }\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../../types/server-error\";\n\nconst TOKEN_STRING = 'jwt_token';\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  // Attempt to get the token from local storage on site boot.\n  token: string | null = window.localStorage.getItem(TOKEN_STRING);\n  appIsLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    // We can use reactions!\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem(TOKEN_STRING, token);\n        } else {\n          window.localStorage.removeItem(TOKEN_STRING);\n        }\n      }\n    )\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  }\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  }\n\n  setAppIsLoaded = () => {\n    this.appIsLoaded = true;\n  }\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { Activity } from '../../types/activity';\nimport { Photo, Profile } from \"../../types/profile\";\nimport { UserActivity } from '../../types/user-activity';\nimport agent from \"../api/agent\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  isLoadingProfile = false;\n  isUploading = false;\n  isLoading = false;\n  isLoadingFollowings = false;\n  followings: Profile[] = [];\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  isLoadingActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      activeTab => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? 'followers' : 'followings'\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    )\n  }\n\n  get isCurrentUser(): boolean {\n    return (store?.userStore?.user?.username === this.profile?.username);\n  }\n\n  setActiveTab = (activeTab: number) => {\n    this.activeTab = activeTab;\n  }\n\n  loadProfile = async (username: string) => {\n    this.isLoadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.isLoadingProfile = false;\n      })\n    } catch (e) {\n      runInAction(() => this.isLoadingProfile = false);\n    }\n  }\n\n  uploadPhoto = async (file: Blob) => {\n    this.isUploading = true;\n    try {\n      const res = await agent.Profiles.uploadPhoto(file);\n      const photo = res.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos.push(photo);\n          // Update main photo if applicable.\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setProfileImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.isUploading = false;\n      });\n    } catch (e) {\n      runInAction(() => {\n        this.isUploading = false;\n      });\n    }\n  }\n\n  setMainPhoto = async (photo: Photo) => {\n    this.isLoading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setProfileImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find(p => p.isMain)!.isMain = false;\n          this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.isLoading = false;\n        }\n      })\n    } catch (e) {\n      runInAction(() => this.isLoading = false);\n      throw e;\n    }\n  }\n\n  deletePhoto = async (photo: Photo) => {\n    this.isLoading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id)\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos.filter(p => p.id !== photo.id);\n          this.isLoading = false;\n        }\n      })\n    } catch (e) {\n      runInAction(() => {\n        this.isLoading = false;\n      })\n      throw e;\n    }\n  }\n\n  updateFollowing = async (username: string, newFollowing: boolean) => {\n    this.isLoading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (this.profile && this.profile.username === username) {\n          if (username === store.userStore.user?.username) {\n\n          } else {\n            newFollowing ? this.profile.followersCount!++ : this.profile.followersCount!--;\n            this.profile.following = !this.profile.following;\n          }\n          if (this.profile && this.profile.username === store.userStore.user?.username) {\n            newFollowing ? this.profile.followingCount!++ : this.profile.followingCount!--\n          }\n          this.followings.forEach(p => {\n            if (p.username === username) {\n              p.following ? p.followersCount!-- : p.followersCount!++\n              p.following = !p.following\n            }\n          })\n        }\n        this.isLoading = false;\n      });\n    } catch (err) {\n      runInAction(() => this.isLoading = false)\n      throw err;\n    }\n  }\n\n  loadFollowings = async (predicate: string) => {\n    this.isLoadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      console.log('aa followings', followings)\n      runInAction(() => {\n        this.followings = followings;\n        this.isLoadingFollowings = false;\n      })\n    } catch (err) {\n      runInAction(() => this.isLoadingFollowings = false);\n      throw err;\n    }\n  }\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.isLoadingActivities = true;\n    try {\n      const acts = await agent.Profiles.listActivities(username, predicate)\n      runInAction(() => {\n        this.userActivities = acts;\n        this.isLoadingActivities = false;\n      })\n    } catch (err) {\n      runInAction(() => this.isLoadingActivities = false);\n      throw err;\n    }\n  }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { History } from \"../..\";\nimport { User, UserFormValues } from \"../../types/user.model\";\nimport agent from \"../api/agent\";\nimport { store } from \"./store\";\n\nconst TOKEN_STRING = 'jwt_token';\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isAuthenticated(): boolean {\n    return Boolean(this.user);\n  }\n\n  // Log the user into the app.\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      // Because it is trying to set on a new tick.\n      runInAction(() => {\n        this.user = user;\n      });\n      History.push('/activities');\n      // Wow easy way to use other deps, having access to parent store obj.\n      store.modalStore.closeModal();\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  // Log the user out of the app.\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(TOKEN_STRING);\n    this.user = null;\n    History.push('/');\n  }\n\n  // Get the current user.\n  getMe = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => {\n        this.user = user;\n      });\n    } catch (e) { throw e; }\n  }\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      // Because it is trying to set on a new tick.\n      runInAction(() => {\n        this.user = user;\n      });\n      History.push('/activites');\n      // Wow easy way to use other deps, having access to parent store obj.\n      store.modalStore.closeModal();\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  setProfileImage = (image: string) => {\n    if (this.user) {\n      this.user.image = image;\n    }\n  }\n}","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore,\n  commonStore: CommonStore,\n  userStore: UserStore,\n  modalStore: ModalStore,\n  profileStore: ProfileStore,\n  commentStore: CommentStore\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore()\n}\n\n// Add the stores to our react context.\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n  open?: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  }\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}","import { HttpTransportType, HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../../types/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (activityId) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n          skipNegotiation: true,\n          transport: HttpTransportType.WebSockets\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n      // Start the actual connection after build.\n      this.hubConnection.start();\n      // WQe get comments sent on connection.\n      // Also, Wow so cool!\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n        runInAction(() => {\n          this.comments = comments.map(comm => new ChatComment({\n            ...comm,\n            createdAt: new Date(`${comm.createdAt}Z`)\n          }));\n        });\n      })\n      this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n        runInAction(() => {\n          this.comments.unshift(new ChatComment(comment))\n        });\n      })\n    }\n  }\n\n  stopHubConnection = () => {\n    if (this.hubConnection) {\n      this.hubConnection.stop()\n    }\n  }\n\n  // Cleanup method!\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      if (this.hubConnection && values.activityId) {\n        await this.hubConnection.invoke('SendComment', values);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Menu, Container, Button, Image, Dropdown } from 'semantic-ui-react';\nimport { useStore } from '../stores/store';\n\nexport default observer(function NavBar() {\n  const { userStore } = useStore();\n\n  return (\n    <Menu inverted fixed='top'>\n      <Container>\n        <Menu.Item as={NavLink} to='/' exact header>\n          <img src=\"/assets/images/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }}></img>\n          <p>Reactivities</p>\n        </Menu.Item>\n        <Menu.Item name=\"Activities\" as={NavLink} exact to='/activities'/>\n        <Menu.Item name=\"Errors\" as={NavLink} exact to='/errors'/>\n        <Menu.Item>\n          <Button \n            positive \n            content=\"Create Activity\"\n            as={NavLink} \n            to='/activities/create/new'\n          />\n        </Menu.Item>\n        <Menu.Item position='right'>\n          <Image src={userStore.user?.image || '/assets/Images/user.png'} spaced='right' avatar />\n          <Dropdown pointing='top left' text={userStore?.user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item \n                as={Link} \n                to={`/profiles/${userStore?.user?.username}`} \n                text='My profile' \n                icon='user' \n              />\n              <Dropdown.Item \n                onClick={userStore.logout} \n                icon='power' \n                text='Logout' \n              />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent } from 'react'\nimport { Reveal, Button } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport { Profile } from '../../types/profile'\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton(props: Props) {\n  const { profileStore, userStore } = useStore()\n\n  if (userStore.user?.username === props.profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    if (props.profile.following) {\n      profileStore.updateFollowing(username, false);\n    } else {\n      profileStore.updateFollowing(username, true);\n    }\n  }\n\n  return (\n    <Reveal animated='move'>\n      <Reveal.Content visible style={{width: '100%'}}>\n        <Button \n          fluid \n          color='blue' \n          content={props.profile.following ? 'Following' : 'Not following'}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{width: '100%'}}>\n        <Button\n          fluid\n          basic\n          color={props.profile.following ? 'red' : 'green' }\n          content={props.profile.following ? 'Unfollow' : 'Follow'}\n          loading={profileStore.isLoading}\n          onClick={(e) => handleFollow(e, props.profile.username)}\n        />\n      </Reveal.Content>\n  </Reveal>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon, Image } from 'semantic-ui-react';\nimport { Profile } from '../../types/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile } : Props) {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || '/assets/Images/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{profile.bio}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='user' />\n        { profile.followersCount } followers\n      </Card.Content>\n      <FollowButton profile={profile}/>\n    </Card>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../types/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n  attendees: Profile[]\n}\n\nexport default observer(function ActivityListItemAttendee(props : Props) {\n  const followStyle = {\n    borderColor: 'orange',\n    borderWidth: 4\n  }\n\n  return (\n    <List horizontal>\n      {props.attendees.map(att => (\n        <Popup\n          hoverable\n          key={att.username}\n          trigger={\n            <List.Item key={att.username} as={Link} to={`/profiles/${att.username}`}>\n              <Image \n                size='mini' \n                circular \n                src={att.image || '/assets/Images/user.png'}\n                bordered\n                style={att.following ? followStyle : null}\n              />\n            </List.Item>\n          }\n        >\n            <Popup.Content>\n              <ProfileCard profile={att} />\n            </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport { Activity } from '../../../types/activity';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label attached='top' content='Cancelled' style={{textAlign: 'center'}} color='red'/>\n        )}\n        <Item.Group >\n          <Item> \n            <Item.Image size='tiny' style={{ marginBottom: 4 }} circular src={activity?.host?.image || '/assets/Images/user.png'} />\n            <Item.Content>\n              <Item.Header\n                as={Link}\n                to={`/activities/${activity.id}`}\n              >\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label color='orange'>You are hosting this activity!</Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && (\n                <Item.Description>\n                  <Label color='green'>You are going to this activity!</Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name='clock' /> { format(activity.date as Date, 'dd MMM yyyy h:mm aa') }\n          <Icon name='marker' /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees}/>\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color='blue'\n          floated='right'\n          content='View'\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}","import React, { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport { observer } from 'mobx-react-lite';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n\n  const { activityStore } = useStore();\n\n  return (\n    <>\n      {activityStore.groupedActivities.map(([key, activities]) => (\n        <Fragment key={key}>\n          <Header sub color='blue'><h2>{key}</h2></Header>\n          {activities.map(at => (\n            <ActivityListItem key={at.id} activity={at}/>\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\n\nexport default observer(function ActivityFilters() {\n  const { activityStore } = useStore();\n  return (\n    <>\n      <Menu vertical size='large' style={{ width: '100%', marginTop: '25px' }}>\n        <Header icon='filter' attached color='blue' content='Filters' />\n        <Menu.Item \n          content='All Activities'\n          active={activityStore.predicate.has('all')}\n          onClick={() => activityStore.setPredicate('all', 'true')}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={activityStore.predicate.has('isGoing')}\n          onClick={() => activityStore.setPredicate('isGoing', 'true')}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={activityStore.predicate.has('isHost')}\n          onClick={() => activityStore.setPredicate('isHost', 'true')}\n        />\n      </Menu>\n      <Header />\n      <Calendar \n        onChange={date => activityStore.setPredicate('startDate', date as Date)}\n        value={activityStore.predicate.get('startDate') || new Date()}\n      />\n    </>\n  );\n});\n","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport ActivityList from './ActivityList';\nimport { useStore } from '../../../app/stores/store';\nimport { observer } from 'mobx-react-lite';\nimport ActivityFilters from './ActivityFilters';\nimport { PagingParams } from '../../../types/pagination';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { activityRegister, loadActivities, setPagingParams, pagination } = activityStore;\n  const [isLoadingNext, setIsLoadingNext] = useState<boolean>();\n\n  function handleGetnext() {\n    setIsLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities()\n      .then(() => setIsLoadingNext(false))\n  }\n\n  useEffect(() => {\n    if (activityRegister.size <= 1) loadActivities();\n  }, [activityRegister.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {(activityStore.isLoading && !isLoadingNext) ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetnext}\n            hasMore={Boolean(!isLoadingNext && pagination && (pagination?.currentPage < pagination?.totalPages))}\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader actve={isLoadingNext}/>\n      </Grid.Column>\n    </Grid>\n  );\n})","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: string;\n}\n\nexport default function TextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props}/>\n      { meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function LoginForm() {\n  const {userStore} = useStore();\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '', error: null }}\n      onSubmit={(value, { setErrors }) => userStore.login(value).catch(() => setErrors({ error: 'Invalid email or password.' }))}\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Log in to reactivities' color='blue' textAlign='center' />\n          <TextInput name='email' placeholder='Email'/>\n          <TextInput name='password' placeholder='Password' type='password'/>\n          <ErrorMessage \n            name='error' \n            render={() => (\n              <Label \n                color='red' \n                content={errors.error}\n                style={{marginBottom: 10}}\n                basic\n              />\n            )}\n          />\n          <Button content='Login' type='submit' fluid color='blue' />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props { errors: any; }\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {\n        errors && (\n          <Message.List>\n            {\n              errors.map((err: any, i: any) => (\n                <Message.Item key={i}>{err}</Message.Item>\n              ))\n            }\n          </Message.List>\n        )\n      }\n    </Message>\n  );\n}","import { ErrorMessage, Form, Formik } from 'formik';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Header } from 'semantic-ui-react';\nimport TextInput from '../../app/common/form/TextInput';\nimport { useStore } from '../../app/stores/store';\nimport * as Yup from 'yup';\nimport ValidationErrors from '../errors/ValidationErrors';\n\n\nexport default observer(function RegisterForm() {\n  const {userStore} = useStore();\n\n  const validationSchema = Yup.object({\n    displayName: Yup.string().required(),\n    username: Yup.string().required(),\n    email: Yup.string().required().email(),\n    password: Yup.string().required()\n  })\n\n  return (\n    <Formik\n      initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\n      onSubmit={\n        (value, { setErrors }) => userStore.login(value).catch((error) => setErrors({ error }))\n      }\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit, isSubmitting, errors, dirty, isValid }) => (\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Sign up to reactivities' color='blue' textAlign='center' />\n          <TextInput name='email' placeholder='Email'/>\n          <TextInput name='displayName' placeholder='Display name'/>\n          <TextInput name='username' placeholder='Username'/>\n          <TextInput name='password' placeholder='Password' type='password'/>\n          <ErrorMessage \n            name='error' \n            render={() => (\n              <ValidationErrors errors={errors.error}/>\n            )}\n          />\n          <Button \n            content='Register' \n            type='submit' \n            fluid \n            color='blue'\n            disabled={isSubmitting || !isValid || dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign='center' vertical className='masthead'>\n      <Container text>\n        <Header as='h1' inverted>\n          <Image size='massive' src='/assets/Images/logo.png' alt='logo' style={{ marginBottom: 12 }}/>\n          Reactivities\n        </Header>\n        {\n          userStore.isAuthenticated ? \n          (\n            <>\n              <Header as='h2' inverted content=\"Welcome to Reactivities!\"/>\n              <Button as={Link} to='/activities' size='huge' inverted>\n                Go to activities!\n              </Button>\n            </>\n          ) :\n          (\n            <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n              Login!\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\n              Register!\n            </Button>\n            </>\n          )\n        }\n      </Container>\n    </Segment>\n  )\n});\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingCircle(props: Props = { inverted: true, content: 'Loading...' }) {\n  return (\n    <Dimmer active={true} inverted={props.inverted}>\n      <Loader content={props.content}/>\n    </Dimmer>\n  )\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function TextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props}/>\n      { meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n}","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label, Select } from 'semantic-ui-react';\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function SelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(event, data) => helpers.setValue(data.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      { meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n}","export const categoryOptions = [\n  {\n    text: 'Drinks',\n    value: 'drinks'\n  },\n  {\n    text: 'Culture',\n    value: 'culture'\n  },\n  {\n    text: 'Film',\n    value: 'film'\n  },\n  {\n    text: 'Travel',\n    value: 'travel'\n  },\n  {\n    text: 'Food',\n    value: 'food'\n  },\n  {\n    text: 'Music',\n    value: 'music'\n  },\n]","import { useField } from 'formik';\nimport React from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\n\nexport default function DateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n\n  return (\n    <Form.Field error={meta.touched && meta.error}>\n      <DatePicker \n        {...field}\n        {...props}\n        selected={(field.value ? new Date(field.value) : null )}\n        onChange={value => helpers.setValue(value)}\n      />\n      { meta.touched && meta.error ? (\n        <Label basic color='red'>{meta.error}</Label>\n      ) : null}\n    </Form.Field>\n  );\n}","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Segment, Button, Header } from 'semantic-ui-react';\nimport LoadingCircle from '../../../app/layout/LoadingCircle';\nimport { useStore } from '../../../app/stores/store';\nimport { Activity, ActivityFormValues } from '../../../types/activity';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport TextInput from '../../../app/common/form/TextInput';\nimport TextArea from '../../../app/common/form/TextArea';\nimport SelectInput from '../../../app/common/form/SelectInput';\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\nimport DateInput from '../../../app/common/form/DateInput';\nimport { v4 as uuid } from 'uuid';\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { id } = useParams<{id: string}>();\n  const [at, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = yup.object({\n    title: yup.string().required('The activity title is required.'),\n    description: yup.string().required('The activity description is required.'),\n    category: yup.string().required(),\n    date: yup.string().required('Date is required.').nullable(),\n    city: yup.string().required(),\n    venue: yup.string().required()\n  });\n\n  useEffect(() => {\n    if (id) {\n      activityStore.loadActivity(id)\n      .then((at) => {\n        if (at) {\n          setActivity(new ActivityFormValues(at));\n        }\n      });\n    }\n  }, [id, activityStore])\n\n  function handleFormSubmit(activity: ActivityFormValues): void {\n    if (activity.id) {\n      activityStore.updateActivity(activity)\n      .then(() => {\n        // This is how we navighate in component!\n        history.push(`/activities/${activity.id}`);\n      });\n    } else {\n        const newActivity = new Activity(activity);\n        newActivity.id = uuid();\n        activityStore.createActivity(newActivity)\n        .then(() => {\n          // This is how we navighate in component!\n          history.push(`/activities/${newActivity.id}`);\n        });\n    }\n  }\n\n  if (activityStore.isLoading) return <LoadingCircle content='Loading content...'/>\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" subheader color='blue'/>\n      <Formik\n        enableReinitialize\n        initialValues={at} \n        onSubmit={(vals) => handleFormSubmit(vals)}\n        validationSchema={validationSchema}\n      >\n        {({handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form \n            onSubmit={handleSubmit} \n            autoComplete='off'\n            className='ui form'\n          >\n            <TextInput name='title' placeholder='Title'/>\n            <TextArea\n              placeholder='Description'\n              name='description'\n              rows={3}\n            />\n            <SelectInput \n              placeholder='Category'\n              name='category'\n              options={categoryOptions}\n            />\n            <DateInput \n              placeholderText='Date'\n              name='date'\n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm aa'\n            />\n            <Header content=\"Location Details\" subheader color='blue'/>\n            <TextInput \n              placeholder='City'\n              name='city'\n            />\n            <TextInput \n              placeholder='Venue'\n              name='venue'\n            />\n            <Button \n              floated='right' \n              positive \n              type='submit' \n              content='Submit'\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n            ></Button>\n            <Button \n              floated='right'\n              type='button'\n              content='Cancel'\n              as={Link}\n              to='/activities'\n            ></Button>\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store';\nimport { Activity } from '../../../types/activity';\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedHeader({activity}: Props) {\n    const { activityStore } = useStore();\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{padding: '0'}}>\n                {activity.isCancelled && (\n                    <Label\n                        ribbon\n                        color='red'\n                        content='Is cancelled'\n                        style={{ zIndex: 1000, left: -14, top: 20, position: 'absolute' }}\n                    />\n                )}\n                <Image src={`/assets/Images/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{color: 'white'}}\n                                />\n                                <p>{format(activity.date as Date, 'dd MMM yyyy')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {\n                (\n                    activity.isHost ? (\n                        <>\n                            <Button \n                                color={activity.isCancelled ? 'green' : 'red'}\n                                floated='left'\n                                basic\n                                content={activity.isCancelled ? 'Re-activate activity' : 'Cancel activity'}\n                                onClick={activityStore.cancelActivityToggle}\n                                loading={activityStore.isSubmitting}\n                            />\n                            <Button\n                                color='orange' \n                                floated='right' \n                                as={Link} \n                                to={`/activities/manage/${activity.id}`}\n                                disabled={activity.isCancelled}\n                            >\n                                Manage Event\n                            </Button>\n                        </>\n                    ) : (\n                        activity.isGoing ? (\n                            <Button loading={activityStore.isSubmitting} onClick={activityStore.updateAttendance}>Cancel attendance</Button>\n\n                        ) : (\n                            <Button \n                                loading={activityStore.isSubmitting} \n                                onClick={activityStore.updateAttendance} \n                                color='blue'\n                                disabled={activity.isCancelled}\n                            >Join Activity</Button>\n                        )\n                    )\n                )\n                }\n                \n            </Segment>\n        </Segment.Group>\n    )\n})\n","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\nimport { Activity } from '../../../types/activity';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='blue' name='info'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='blue'/>\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <span>\n                        {format(activity.date as Date, 'dd MMM yyyy h:mm aa')}\n                        </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='blue'/>\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})","import { Formik, Form, Field, FieldProps } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react'\nimport { useStore } from '../../../app/stores/store'\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns'\n\ninterface Props {\n    activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat(props : Props) {\n    const { commentStore } = useStore();\n\n    useEffect(() => {\n        if (props.activityId) {\n            commentStore.createHubConnection(props.activityId);\n        }\n        // The function you return is what is execued when the component is cleaned up.\n        return () => {\n            commentStore.clearComments();\n        }\n    }, [commentStore, props.activityId]);\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                attached='top'\n                inverted\n                color='blue'\n                style={{border: 'none'}}\n            >\n                <Header>Chat about this event</Header>\n            </Segment>\n            <Segment clearing>\n                <Formik\n                    initialValues={{body: ''}}\n                    onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\n                    validationSchema={Yup.object({\n                        body: Yup.string().required()\n                    })}\n                >\n                    {({ isSubmitting, isValid, handleSubmit }) => (\n                        <Form className='ui form'>\n                            <Field \n                                name='body'\n                            >\n                                {(props: FieldProps) => (\n                                    <div style={{position: 'relative'}}>\n                                        <Loader active={isSubmitting}/>\n                                        <textarea\n                                            placeholder='Enter your comment, press shift enter for a new line.'\n                                            rows={2}\n                                            {...props.field}\n                                            onKeyPress={(e) => {\n                                                if (e.key === 'Enter' && e.shiftKey) {\n                                                    return;\n                                                }\n                                                if (e.key === 'Enter' && !e.shiftKey) {\n                                                    e.preventDefault();\n                                                    isValid && handleSubmit();\n                                                }\n                                            }}\n                                        >\n\n                                        </textarea>\n                                    </div>\n                                )}\n\n                            </Field>\n                        </Form>\n                    )}\n                </Formik>\n                <Comment.Group>\n                    {\n                        commentStore.comments.map(comment => (\n                            <Comment key={comment.id}>\n                                <Comment.Avatar src={comment.image || '/assets/Images/user.png'}/>\n                                <Comment.Content>\n                                    <Comment.Author as={Link} to={`/profiles/${comment.username}`}>{comment.username}</Comment.Author>\n                                    <Comment.Metadata>\n                                        <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                                    </Comment.Metadata>\n                                    <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\n                                </Comment.Content>\n                            </Comment>\n                        ))\n                    }\n                </Comment.Group>\n            </Segment>\n        </>\n\n    )\n})","\nimport React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../types/activity'\n\ninterface Props {\n    activity: Activity;\n  }\n\nexport default observer(function ActivityDetailedSidebar ({ activity }: Props) {\n    if (!activity.attendees) return null;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='blue'\n            >\n                {activity.attendees.length} {activity.attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {activity.attendees.map(attendee => (\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\n                            {attendee.username === activity.host?.username && (\n                                <Label\n                                    style={{ position: 'absolute' }}\n                                    color='orange'\n                                    ribbon='right'\n                                >\n                                    Host\n                                </Label>\n                            )}\n                            <Image size='tiny' src={attendee.image || '/assets/Images/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Item.Header as='h3'>\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                                </Item.Header>\n                                {attendee.following && (<Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>)}\n                            </Item.Content>\n                        </Item>\n                    ))}\n                </List>\n            </Segment>\n        </>\n    )\n})\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingCircle from '../../../app/layout/LoadingCircle';\nimport { useStore } from '../../../app/stores/store';\nimport { observer } from 'mobx-react-lite';\nimport ActivityDetailsHeader from './ActivityDetailsHeader';\nimport ActivityDetailsInfo from './ActivityDetailsInfo';\nimport ActivityDetailsChat from './ActivityDetailsChat';\nimport ActivityDetailsSidebar from './ActivityDetailsSidebar';\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const { selectedActivity: activity } = activityStore;\n  const { id } = useParams<{id: string}>();\n\n  useEffect(() => {\n    if (id) {\n      activityStore.loadActivity(id);\n    }\n    return () => {\n      activityStore.clearSelectedActivity()\n    }\n  }, [id, activityStore])\n\n  if (activityStore.isLoading || !activity) return <LoadingCircle />;\n  \n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailsHeader activity={activity} />\n        <ActivityDetailsInfo activity={activity} />\n        <ActivityDetailsChat activityId={activity?.id}/>\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailsSidebar activity={activity}/>\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorised() {\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {\n              errors &&\n              <ValidationErrors errors={errors || []}/>\n            }\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        We could not find the droids you are looking for.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to='/activities' primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n\n  return (\n    <Container>\n      <Header as='h1' content=\"Server Error\" />\n      <Header sub as='h5' color='red' content={commonStore.error?.message} />\n      { commonStore.error?.details &&\n        <Segment>\n          <Header as='h4' content='Stack Trace' color='blue'/>\n          <code style={{marginTop: 10}}>{commonStore.error?.details}</code>\n        </Segment>\n      }\n    </Container>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Modal } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  );\n});\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future events', pane: { key: 'future' } },\r\n  { menuItem: 'Past events', pane: { key: 'past' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosting' } }\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    isLoadingActivities,\r\n    userActivities\r\n  } = profileStore;\r\n\r\n  useEffect(() => {\r\n    if (profile) {\r\n      loadUserActivities(profile.username);\r\n    }\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: any, data: TabProps) => {\r\n    if (profile) {\r\n      loadUserActivities(profile.username, panes[data.activeIndex as number].pane.key);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane loading={isLoadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content='Activities' />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab \r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br/>\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map(att => (\r\n              <Card \r\n                as={Link}\r\n                to={`/activities/${att.id}`}\r\n                key={att.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/Images/categoryImages/${att.category}.jpg`}\r\n                  style={{minHeight: 100, objectFit: 'cover'}}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{att.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(att.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(att.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  )\r\n});\r\n","import { observer } from 'mobx-react-lite'\nimport React from 'react'\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store'\nimport ProfileCard from './ProfileCard';\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n\n  return (\n    <Tab.Pane loading={profileStore.isLoadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header \n            floated='right' \n            icon='user' \n            content={profileStore.activeTab === 3 ? `People following ${profileStore.profile?.displayName}` : `People followed ${profileStore.profile?.displayName}`}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {profileStore.followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile}/>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})\n","import React from 'react'\nimport { Cropper } from 'react-cropper'\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper(props: Props) {\n  return (\n    <Cropper\n      src={props.imagePreview}\n      style={{ height: 200, width: '100%' }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview='.img-preview'\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={cropper => props.setCropper(cropper)}\n    />\n\n  )\n}\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react';\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles } : Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: 5,\n    paddingTop: 30,\n    textAlign: 'center' as 'center',\n    height: 200\n  };\n  const dzActive = {\n    borderColor: 'green'\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: any) => ({\n      ...file,\n      preview: URL.createObjectURL(file)\n    })));\n  }, [setFiles])\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge'/>\n      <Header content='Drop file here!'/>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react'\nimport { Button, Grid, Header } from 'semantic-ui-react'\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone'\n\ninterface Props {\n    isLoading: boolean;\n    uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget(props: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob(blob => {\n        if (blob) {\n          props.uploadPhoto(blob);\n        }\n      })\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => {\n        // Cleanup URL objects we made.\n        URL.revokeObjectURL(file.preview);\n      });\n    }\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color='blue' content='Step 1 - Add Photo'/>\n        <PhotoWidgetDropzone setFiles={setFiles}/>\n      </Grid.Column>\n      <Grid.Column width={1}/>\n      <Grid.Column width={4}>\n        <Header sub color='blue' content='Step 2 - Resize Photo'/>\n        {\n          (files && files.length) && (\n            <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview}/>\n          )\n        }\n      </Grid.Column>\n      <Grid.Column width={1}/>\n      <Grid.Column width={4}>\n        <Header sub color='blue' content='Step 3 - Preview & Upload'/>\n        {\n          (files && files.length) && (\n            <>\n              <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\n              <Button.Group width={2}>\n                <Button loading={props.isLoading} onClick={onCrop} positive icon='check'/>\n                <Button disabled={props.isLoading} onClick={() => setFiles([])} icon='close'/>\n              </Button.Group>\n            </>\n          )\n        }\n        \n      </Grid.Column>\n    </Grid>\n  )\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react'\nimport { Card, Header, Tab, Image, Grid, Button } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../app/common/image-upload/PhotoUploadWidget';\nimport { useStore } from '../../app/stores/store';\nimport { Photo, Profile } from '../../types/profile';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  // Do not destructure like this!\n  const { profileStore: { isCurrentUser, uploadPhoto, isUploading, setMainPhoto, isLoading, deletePhoto } } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState<boolean>(false);\n  const [target, setTarget] = useState('');\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file)\n    .then(() => {\n      setAddPhotoMode(false);\n    })\n  }\n\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  } \n\n  function handleDeletePhoto(photo: Photo, e: any): void {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header icon='image' content='Photos' floated='left'/>\n          {\n            isCurrentUser && (\n              <Button\n                floated='right' \n                basic \n                content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                onClick={() => setAddPhotoMode(!addPhotoMode)}\n              />\n            )\n          }\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {\n            addPhotoMode ? (\n              <PhotoUploadWidget uploadPhoto={handlePhotoUpload} isLoading={isUploading} />\n            ) : (\n              <Card.Group itemsPerRow={5}>\n                {profile.photos?.map(photo => (\n                  <Card key={photo.id}>\n                  <Image src={photo.url || '/assets/Images/user.png'}/>\n                  {\n                    isCurrentUser && (\n                      <Button.Group fluid widths={2}>\n                        <Button  \n                          basic\n                          color='green'\n                          content='Main'\n                          name={`main${photo.id}`}\n                          disabled={photo.isMain}\n                          loading={target === 'main' + photo.id && isLoading}\n                          onClick={e => handleSetMainPhoto(photo, e)}\n                        />\n                        <Button \n                          basic\n                          color='red'\n                          icon='trash'\n                          name={photo.id}\n                          loading={target === photo.id && isLoading}\n                          onClick={e => handleDeletePhoto(photo, e)}\n                          disabled={photo.isMain}\n                        />\n                      </Button.Group>\n                    )\n                  }\n                  </Card>\n                ))}\n              </Card.Group>\n            )\n          }\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { useStore } from '../../app/stores/store';\nimport { Profile } from '../../types/profile';\nimport ProfileActivities from './ProfileActivities';\nimport ProfileFollowings from './ProfileFollowings';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n  const panes = [\n    { menuItem: 'About', render: () => <Tab.Pane>About Me</Tab.Pane> },\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile}/> },\n    { menuItem: 'Activities', render: () => <ProfileActivities /> },\n    { menuItem: 'Followers', render: () => <ProfileFollowings /> },\n    { menuItem: 'Following', render: () => <ProfileFollowings /> }\n  ]\n  return (\n    <Tab\n      menu={{fluid: true, vertical: true}}\n      menuPosition='right'\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex as number)}\n    />\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Divider, Grid, Header, Item, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../types/profile';\nimport FollowButton from './FollowButton';\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function profileHeader({ profile } : Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size='small' src={profile.image || '/assets/Images/user.png'} />\n              <Item.Content verticalAlign='middle'>\n                <Header as='h1' content={profile.displayName}/>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label='Followers' value={profile.followersCount}/>\n            <Statistic label='Following' value={profile.followingCount}/>\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile}/>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingCircle from '../../app/layout/LoadingCircle';\nimport { useStore } from '../../app/stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { isLoadingProfile, loadProfile, profile } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username)\n    return () => {\n      profileStore.setActiveTab(0);\n    }\n  }, [profileStore, loadProfile, username])\n\n  if (isLoadingProfile) return <LoadingCircle content='Loading profile...'/>\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && <ProfileHeader profile={profile} />}\n        {profile && <ProfileContent profile={profile} />}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React from 'react'\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { useStore } from '../stores/store'\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const { userStore: { isAuthenticated } } = useStore();\r\n  return (\r\n    <Route \r\n      {...rest}\r\n      render={(props) => (\r\n        isAuthenticated ? <Component {...props}/> : <Redirect to='/'/> \r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport { ToastContainer } from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingCircle from './LoadingCircle';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getMe().finally(() => commonStore.setAppIsLoaded());\n    } else {\n      commonStore.setAppIsLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appIsLoaded) return <LoadingCircle content='Loading app...'/>\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage}/>\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: '7em' }}>\n              <Switch>\n                <PrivateRoute exact path='/activities' component={ActivityDashboard}/>\n                <PrivateRoute exact path='/activities/:id' component={ActivityDetails}/>\n                <PrivateRoute exact key={location.key} path={['/activities/create/new', '/activities/manage/:id']} component={ActivityForm}/>\n                <PrivateRoute exact path='/profiles/:username' component={ProfilePage}/>\n                <PrivateRoute exact path='/errors' component={TestErrors}/>\n                <Route exact path='/server-error' component={ServerError}/>\n                <Route exact component={NotFound}/>\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router';\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { createBrowserHistory } from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const History = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={History}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}